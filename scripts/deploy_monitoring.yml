name: Deploy Monitoring Stack

on:
  push:
    branches: [mono]
  workflow_dispatch:

jobs:
  deploy-monitoring:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no" > ~/.ssh/config

          - name: Create certificate files and Kubernetes secrets
          run: |
            # Créer les fichiers de certificat et clé
            echo "${{ secrets.CERTIF_MONO }}" > mono.crt
            echo "${{ secrets.KEY_MONO }}" > mono.key
        
            # Créer le namespace monitoring s'il n'existe pas
            kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -
        
            # Créer le secret TLS dans Kubernetes
            kubectl create secret tls monitoring-tls \
              --cert=mono.crt \
              --key=mono.key \
              -n monitoring --dry-run=client -o yaml | kubectl apply -f -

      - name: Transfer files
        run: |
          scp -i ~/.ssh/id_rsa prometheus-values.yaml \
            ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/

      - name: Execute deployment
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP }} \
            "sudo apt-get update && sudo apt-get install -y curl && sudo /home/ubuntu/deploy_mono.sh"

      - name: Cleanup
        run: rm -f ~/.ssh/id_rsa