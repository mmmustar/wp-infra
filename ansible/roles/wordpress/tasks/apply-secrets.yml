- name: Vérifier si le SecretProviderClass existe
  command: kubectl get SecretProviderClass wordpress-aws-secrets -n default
  register: secret_provider_class_exists
  ignore_errors: true

- name: Appliquer le SecretProviderClass AWS
  template:
    src: aws-secrets.yaml.j2
    dest: /tmp/aws-secrets.yaml
  when: secret_provider_class_exists.rc != 0

- name: Déployer le SecretProviderClass AWS
  command: kubectl apply -f /tmp/aws-secrets.yaml
  when: secret_provider_class_exists.rc != 0

- name: Vérifier si le Secret existe
  command: kubectl get secret wordpress-secrets -n default
  register: secret_exists
  ignore_errors: true

- name: Créer ou mettre à jour le Secret Kubernetes
  shell: |
    kubectl delete secret wordpress-secrets -n default --ignore-not-found
    kubectl create secret generic wordpress-secrets -n default \
      --from-literal=MYSQL_USER={{ wordpress_db_user }} \
      --from-literal=MYSQL_PASSWORD={{ wordpress_db_password }} \
      --from-literal=MYSQL_DATABASE={{ wordpress_db_name }}
  when: secret_exists.rc != 0
