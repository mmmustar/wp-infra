# roles/k3s/tasks/main.yml
---
- name: Get subnet IDs from AWS
  shell: >
    aws ec2 describe-subnets
    --region {{ aws_region }}
    --filters "Name=tag:Project,Values={{ project_name }}" "Name=tag:Environment,Values={{ environment }}"
    --query "Subnets[0].SubnetId"
    --output text
  register: subnet_info
  delegate_to: localhost
  become: false
  changed_when: false

- name: Set subnet ID
  set_fact:
    public_subnet_id: "{{ subnet_info.stdout }}"
  when: subnet_info.stdout != ""

- name: Download k3s installation script
  get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'

- name: Install k3s
  shell: 
    cmd: INSTALL_K3S_VERSION={{ k3s_version }} /tmp/k3s-install.sh --write-kubeconfig-mode 644 {{ k3s_server_args }}
  args:
    creates: /usr/local/bin/k3s
  environment:
    INSTALL_K3S_EXEC: "{{ k3s_server_args }}"
  register: k3s_install

- name: Wait for k3s service to start
  systemd:
    name: k3s
    state: started
    enabled: yes
  register: k3s_service

- name: Configure kubeconfig permissions
  file:
    path: /etc/rancher/k3s/k3s.yaml
    mode: '0644'
  become: true

- name: Set KUBECONFIG environment variable
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml"
    state: present
  become: true

- name: Wait for k3s node to be ready
  shell: kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml get nodes
  register: node_status
  until: "'Ready' in node_status.stdout"
  retries: 30
  delay: 10
  become: true

- name: Add NodePort range to security group
  shell: >
    aws ec2 authorize-security-group-ingress 
    --region {{ aws_region }}
    --group-id {{ security_group_id }}
    --protocol tcp 
    --port 30000-32767 
    --cidr 0.0.0.0/0
  delegate_to: localhost
  become: false
  register: sg_result
  failed_when: 
    - sg_result.rc != 0 
    - '"InvalidPermission.Duplicate" not in sg_result.stderr'
  changed_when: sg_result.rc == 0

# Installation de Helm
- name: Include Helm installation tasks
  ansible.builtin.include_tasks: helm.yml

# Installation de NGINX Ingress
- name: Add ingress-nginx repository
  command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  changed_when: true
  failed_when: false

- name: Update Helm repos
  command: helm repo update
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  changed_when: true

- name: Install ingress-nginx
  command: >
    helm install ingress-nginx ingress-nginx/ingress-nginx 
    --namespace ingress-nginx 
    --create-namespace 
    --set controller.service.type=NodePort 
    --set controller.service.nodePorts.http=30080 
    --set controller.service.nodePorts.https=30443
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: nginx_install
  failed_when: false

- name: Wait for ingress-nginx deployment
  shell: >
    kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml get deployment 
    ingress-nginx-controller -n ingress-nginx
  register: nginx_deployment
  until: "'1/1' in nginx_deployment.stdout"
  retries: 30
  delay: 10
  ignore_errors: true

# Installation du EBS CSI Driver
- name: Include EBS CSI tasks
  include_tasks: ebs-csi.yml
  when: ebs_csi_enabled